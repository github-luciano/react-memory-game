{"version":3,"sources":["components/Cards.js","components/Header.js","components/Stats.js","App.js","index.js"],"names":["Cards","props","shuffleState","newState","cars","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","setCars","console","log","setUpdater","updater","className","map","img","onClick","setGameStarted","handleTimer","handleStats","gameStarted","imageClickHandler","src","url","alt","id","name","Header","timer","Stats","win","lose","score","remaining","highScore","App","helper","timerInterval","useState","clicked","uniqid","setTimer","originalTimer","setWin","setLose","setScore","setRemaining","originalRemaining","setHighScore","handleLose","prevLose","resetGame","i","resetTimer","highestTimeout","setInterval","clearInterval","alert","prevWin","prevScore","prevRemaining","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d34d0bac.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../styles/cards.scss';\n\nfunction Cards(props) {\n\n  function shuffle(array) {\n    let currentIndex = array.length, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  }\n\n  function shuffleState() {\n    let newState = props.cars\n    shuffle(newState)\n    props.setCars(newState)\n    console.log(props.cars)\n    props.setUpdater(props.updater+1)\n  }\n\n  function imageClickHandler(img) {\n    shuffleState()\n    props.setGameStarted(true)\n    props.handleTimer(img)\n    props.handleStats(img)\n    console.log(props.gameStarted)\n  }\n\n  return (\n    <div className=\"cards-container\">\n      <div className=\"cards\">\n        {\n          props.cars.map((img) =>\n          <div className=\"single-card-container\" onClick={() => imageClickHandler(img)}>\n              <img key={img.id} src={img.url} alt=\"Classic car\" className=\"single-card\" />\n              <h2>{img.name}</h2>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Cards;\n","import '../styles/header.scss';\n\nfunction Header(props) {\n\n\n  return(\n    <div className=\"header-container\">\n      <div className=\"title-container\">\n        <h1>Classic Cars Memory Game</h1>\n        <h2>Click on each car without clicking the same twice</h2>\n      </div>\n      <div className=\"timer\">TIMER: {props.timer}</div>\n    </div>\n  )\n}\n\nexport default Header;\n","import React, {useState, useEffect} from 'react';\nimport '../styles/stats.scss';\n\nfunction Stats(props) {\n  return(\n    <div className=\"stats-container\">\n      <h2>Wins: {props.win} | Losses: {props.lose}</h2>\n      <h2>Score: {props.score - 1} | Remaining: {props.remaining} | High Score: {props.highScore}</h2>\n    </div>\n  )\n}\n\nexport default Stats;\n","import React, {useState, useEffect} from 'react';\nimport uniqid from \"uniqid\";\nimport './styles/App.scss';\nimport './styles/cssReset.scss';\nimport Cards from './components/Cards.js';\nimport Header from './components/Header.js';\nimport Stats from './components/Stats.js';\n\nfunction App() {\n  const [cars, setCars] = useState([\n    {url: 'images/969-Maserati-Ghibli-47.jpg', name: 'Maserati', clicked: false, id: uniqid()},\n    {url: 'images/1961-Jaguar-E-Type.jpg', name: 'Jaguar', clicked: false, id: uniqid()},\n    {url: 'images/1962-Ferrari-250.jpg', name: 'Ferrari 250', clicked: false, id: uniqid()},\n    {url: 'images/1963-Aston-Martin-DB5.jpg', name: 'Aston Martin', clicked: false, id: uniqid()},\n    {url: 'images/1963-Corvette-Sting-Ray.jpg', name: 'Corvette', clicked: false, id: uniqid()},\n    {url: 'images/1966-Alfa-Romeo-Spider-Duetto.jpg', name: 'Alfa-Romeo', clicked: false, id: uniqid()},\n    {url: 'images/1966-Lamborghini-Miura.jpg', name: 'Lamborghini', clicked: false, id: uniqid()},\n    {url: 'images/1966-Shelby-Cobra-427.jpg', name: 'Shelby', clicked: false, id: uniqid()},\n    {url: 'images/1969-Boss-429-Mustang.jpg', name: 'Boss', clicked: false, id: uniqid()},\n    {url: 'images/1969-Chevrolet-Camaro.jpg', name: 'Chevrolet', clicked: false, id: uniqid()},\n    {url: 'images/1969-Dodge-Charger-2.jpg', name: 'Dodge', clicked: false, id: uniqid()},\n    {url: 'images/1969-Ferrari-Dino-246-GT.jpg', name: 'Ferrari Dino', clicked: false, id: uniqid()},\n    {url: 'images/1970-Datsun-240Z.jpg', name: 'Datsun', clicked: false, id: uniqid()},\n    {url: 'images/Mercedes-300SL-Gullwing.jpg', name: 'Mercedes', clicked: false, id: uniqid()},\n    {url: 'images/Toyota-2000GT.jpg', name: 'Toyota', clicked: false, id: uniqid()}\n  ])\n  const [timer, setTimer] = useState(5)\n  const [originalTimer, setOriginalTimer] = useState(timer)\n  const [gameStarted, setGameStarted] = useState(false)\n  const [updater, setUpdater] = useState(1)\n  const [win, setWin] = useState(0)\n  const [lose, setLose] = useState(0)\n  const [score, setScore] = useState(1)\n  const [remaining, setRemaining] = useState(15)\n  const [originalRemaining, setOriginalRemaining] = useState(15)\n  const [highScore, setHighScore] = useState(0)\n\n  let helper\n  let timerInterval\n\n  function handleStats(img) {\n    //prevents score from adding 1 when it clicks an image that makes you lose the game\n    if (img.clicked === true) {\n      setScore(prevScore => prevScore + 1)\n      if (score>highScore) {\n        setHighScore(score)\n      }\n      setRemaining(prevRemaining => prevRemaining - 1)\n    }\n  }\n  function resetStats() {\n    setScore(1)\n    setRemaining(originalRemaining)\n  }\n  function handleLose() {\n    setLose(prevLose => prevLose + 1)\n  }\n\n\n  // resets the game and \"clicked\" attributes on images\n  function resetGame() {\n    for (var i=0; i < cars.length; i++) {\n      cars[i].clicked = false\n    };\n    setGameStarted(false);\n    resetTimer()\n    resetStats()\n  }\n  // resets all timers\n  function resetTimer() {\n    var highestTimeout = setInterval(\";\")\n    for (var i=0; i<highestTimeout; i++) {\n      clearInterval(i);\n    }\n    clearInterval(timerInterval)\n    setTimer(originalTimer);\n  }\n\n  const handleTimer = (img) => {\n    // when timer is up you lose\n    resetTimer();\n    helper = originalTimer\n    if (remaining === 1) {\n      alert('Congratulations! You have won!')\n      setWin(prevWin => prevWin + 1)\n      resetGame()\n    } else {\n\n      timerInterval = setInterval(() => {\n        helper -= 1\n        setTimer(helper)\n        console.log(helper)\n        if (helper === 0) {\n          alert('Time is up! You have lost')\n          handleLose()\n          resetGame()\n          clearInterval(timerInterval)\n        }\n      }, 1000)\n      \n      // clicking twice on the same image makes you lose\n      if (img.clicked === false) {\n        img.clicked = true\n      } else {\n        alert(\"You already clicked this image, you have lost\")\n        handleLose()\n        resetGame()\n        clearInterval(timerInterval)\n      }\n    }\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Header \n        timer={timer}\n        setTimer={setTimer}\n      />\n      <Cards \n        cars={cars} \n        setCars={setCars}\n        handleTimer={handleTimer}\n        gameStarted={gameStarted}\n        setGameStarted={setGameStarted}\n        updater={updater}\n        setUpdater={setUpdater}\n        handleStats={handleStats}\n      />\n      <Stats \n        win={win}\n        lose={lose}\n        score={score}\n        remaining={remaining}\n        highScore={highScore}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}